pragma solidity 0.7.5;

contract Escrow {
    address public depositor;
    address payable public beneficiary;
    address public arbiter;
    bool public isApproved = false;

    event Approved(uint);

    constructor(address _arbiter, address payable _beneficiary) payable {
        arbiter = _arbiter;
        beneficiary = _beneficiary;
        depositor = msg.sender;
    }

    function approve() public {
        require(msg.sender == arbiter);
        uint contractBalance = address(this).balance;
        beneficiary.transfer(address(this).balance);
        isApproved = true;

        emit Approved(contractBalance);
    }
}
